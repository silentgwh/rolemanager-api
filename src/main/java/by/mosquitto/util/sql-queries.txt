==============================================================================================================

TRUNCATE TABLE
    profile_role,
    role_privilege,
    users,
    profile,
    role,
    privilege
RESTART IDENTITY CASCADE;


==============================================================================================================
-- Таблица пользователей
CREATE TABLE IF NOT EXISTS users (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    profile_id INTEGER,
    date_corr TIMESTAMP,
    FOREIGN KEY (profile_id) REFERENCES profile(id) ON DELETE SET NULL
);

-- Таблица привилегий
CREATE TABLE privilege (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    type SMALLINT NOT NULL CHECK (type IN (0, 1)), -- 0 = приватный, 1 = публичный
    name_2 VARCHAR(255),
    comment VARCHAR(255),
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_corr BIGINT REFERENCES "user"(id) ON DELETE SET NULL
);

-- Таблица ролей
CREATE TABLE role (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    type SMALLINT NOT NULL CHECK (type IN (0, 1)), -- 0 = приватный, 1 = публичный
    comment VARCHAR(255),
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_corr BIGINT REFERENCES "user"(id) ON DELETE SET NULL
);

-- Таблица профилей
CREATE TABLE profile (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    comment VARCHAR(255),
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_corr BIGINT REFERENCES "user"(id) ON DELETE SET NULL
);

-- Связь ролей и привилегий
CREATE TABLE role_privilege (
    id_role INTEGER NOT NULL REFERENCES role(id) ON DELETE CASCADE,
    id_priv INTEGER NOT NULL REFERENCES privilege(id) ON DELETE CASCADE,
    PRIMARY KEY (id_role, id_priv)
);

-- Связь профилей и ролей
CREATE TABLE profile_role (
    id_prof INTEGER NOT NULL REFERENCES profile(id) ON DELETE CASCADE,
    id_role INTEGER NOT NULL REFERENCES role(id) ON DELETE CASCADE,
    PRIMARY KEY (id_prof, id_role)
);

CREATE TABLE user_privilege (
    user_id BIGINT NOT NULL REFERENCES "user"(id) ON DELETE CASCADE,
    privilege_id BIGINT NOT NULL REFERENCES privilege(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, privilege_id)
);

CREATE TABLE "user" (
    id BIGINT PRIMARY KEY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    id_role BIGINT,
    FOREIGN KEY (id_role) REFERENCES role(id) ON DELETE SET NULL
);

==============================================================================================================
-- Таблица пользователей
CREATE TABLE users (
    id BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    profile_id INTEGER,
    role_id BIGINT,
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Таблица привилегий
CREATE TABLE privilege (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    type SMALLINT NOT NULL CHECK (type IN (0, 1)),
    name_2 VARCHAR(255),
    comment VARCHAR(255),
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_corr BIGINT
);

-- Таблица ролей
CREATE TABLE role (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    type SMALLINT NOT NULL CHECK (type IN (0, 1)),
    comment VARCHAR(255),
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_corr BIGINT
);

-- Таблица профилей
CREATE TABLE profile (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    comment VARCHAR(255),
    date_corr TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    user_corr BIGINT
);

-- Связь ролей и привилегий
CREATE TABLE role_privilege (
    id_role INTEGER NOT NULL REFERENCES role(id) ON DELETE CASCADE,
    id_priv INTEGER NOT NULL REFERENCES privilege(id) ON DELETE CASCADE,
    PRIMARY KEY (id_role, id_priv)
);

-- Связь профилей и ролей
CREATE TABLE profile_role (
    id_prof INTEGER NOT NULL REFERENCES profile(id) ON DELETE CASCADE,
    id_role INTEGER NOT NULL REFERENCES role(id) ON DELETE CASCADE,
    PRIMARY KEY (id_prof, id_role)
);

-- Привилегии пользователя напрямую
CREATE TABLE user_privilege (
    user_id BIGINT NOT NULL REFERENCES users(id) ON DELETE CASCADE,
    privilege_id BIGINT NOT NULL REFERENCES privilege(id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, privilege_id)
);

-- Добавление внешних ключей после создания всех таблиц
ALTER TABLE users
    ADD CONSTRAINT fk_users_profile FOREIGN KEY (profile_id) REFERENCES profile(id) ON DELETE SET NULL,
    ADD CONSTRAINT fk_users_role FOREIGN KEY (role_id) REFERENCES role(id) ON DELETE SET NULL;

ALTER TABLE privilege
    ADD CONSTRAINT fk_priv_user_corr FOREIGN KEY (user_corr) REFERENCES users(id) ON DELETE SET NULL;

ALTER TABLE role
    ADD CONSTRAINT fk_role_user_corr FOREIGN KEY (user_corr) REFERENCES users(id) ON DELETE SET NULL;

ALTER TABLE profile
    ADD CONSTRAINT fk_profile_user_corr FOREIGN KEY (user_corr) REFERENCES users(id) ON DELETE SET NULL;


